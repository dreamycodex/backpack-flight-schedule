{"ast":null,"code":"var _jsxFileName = \"/Users/sr/Documents/my-app-2/src/App.js\";\n// import React from 'react';\n// import { BpkCode } from '@skyscanner/backpack-web/bpk-component-code';\n// import BpkButton from '@skyscanner/backpack-web/bpk-component-button';\n// import BpkText from '@skyscanner/backpack-web/bpk-component-text';\n\n// import { cssModules } from '@skyscanner/backpack-web/bpk-react-utils';\n\n// import STYLES from './App.scss';\n\n// const getClassName = cssModules(STYLES);\n\n// const App = () => (\n//   <div className={getClassName('App')}>\n\n//     <header className={getClassName('App__header')}>\n//       <div className={getClassName('App__header-inner')}>\n//         <BpkText tagName=\"h1\" textStyle=\"xxl\" className={getClassName('App__heading')}>Flight Schedule</BpkText>\n//       </div>\n//     </header>\n\n//     <main className={getClassName('App__main')}>\n//       <BpkText tagName=\"p\" className={getClassName('App__text')}>\n//         To get started, edit <BpkCode>src/App.jsx</BpkCode> and save to reload.\n//       </BpkText>\n//       <BpkText tagName=\"p\" className={getClassName('App__text')}>\n//         CALENDAR\n//       </BpkText>\n//       <BpkButton onClick={() => alert('It works!')}>Click me</BpkButton>\n//     </main>\n\n//   </div>\n// );\n\n// export default App;\n\nimport { Component } from 'react';\nimport BpkCalendar from '@skyscanner/backpack-web/bpk-component-calendar';\nimport BpkInput, { INPUT_TYPES } from '@skyscanner/backpack-web/bpk-component-input';\nimport format from 'date-fns/format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDateFull = date => format(date, 'EEEE, do MMMM yyyy');\nconst formatMonth = date => format(date, 'MMMM yyyy');\nconst daysOfWeek = [{\n  name: 'Sunday',\n  nameAbbr: 'Sun',\n  index: 0,\n  isWeekend: true\n}\n// ...\n];\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.handleDateSelect = date => {\n      this.setState({\n        selectionConfiguration: {\n          type: this.props.selectionConfiguration.type,\n          date: date\n        }\n      });\n    };\n    this.state = {\n      selectionConfiguration: {\n        type: CALENDAR_SELECTION_TYPE.single,\n        date: null\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BpkInput, {\n        id: \"dateInput\",\n        type: INPUT_TYPES.text,\n        name: \"date\",\n        value: (this.state.selectionConfiguration.date || '').toString(),\n        placeholder: \"Departure date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BpkCalendar, {\n        id: \"calendar\",\n        onDateSelect: this.handleDateSelect,\n        formatMonth: formatMonth,\n        formatDateFull: formatDateFull,\n        daysOfWeek: daysOfWeek,\n        weekStartsOn: 1,\n        changeMonthLabel: \"Change month\",\n        nextMonthLabel: \"Next month\",\n        previousMonthLabel: \"Previous month\",\n        selectionConfiguration: this.state.selectionConfiguration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/* steps \nDONE - Step One: Update the header text to read “Flight Schedule”\n\nDONE - Step Two: Install the Calendar component by running the command `npm install bpk-component-calendar --save-dev`. This is also described in the Calendar documentation.\n\nStep Three: Review the Calendar documentation for usage, and add this feature into your `App.js` file. You can also edit the `App.scss` to adjust the calendar’s appearance.\n\nStep Four: Place the “Click Me” button below the calendar, and update the button’s text to say “Continue.” You can leave the button’s functionality as is.\n\nStep Five: As described above, review your application’s appearance by entering `npm start` in the terminal and then navigating to localhost:3000. */","map":{"version":3,"names":["Component","BpkCalendar","BpkInput","INPUT_TYPES","format","jsxDEV","_jsxDEV","formatDateFull","date","formatMonth","daysOfWeek","name","nameAbbr","index","isWeekend","App","constructor","handleDateSelect","setState","selectionConfiguration","type","props","state","CALENDAR_SELECTION_TYPE","single","render","children","id","text","value","toString","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onDateSelect","weekStartsOn","changeMonthLabel","nextMonthLabel","previousMonthLabel"],"sources":["/Users/sr/Documents/my-app-2/src/App.js"],"sourcesContent":["// import React from 'react';\n// import { BpkCode } from '@skyscanner/backpack-web/bpk-component-code';\n// import BpkButton from '@skyscanner/backpack-web/bpk-component-button';\n// import BpkText from '@skyscanner/backpack-web/bpk-component-text';\n\n// import { cssModules } from '@skyscanner/backpack-web/bpk-react-utils';\n\n// import STYLES from './App.scss';\n\n// const getClassName = cssModules(STYLES);\n\n// const App = () => (\n//   <div className={getClassName('App')}>\n\n//     <header className={getClassName('App__header')}>\n//       <div className={getClassName('App__header-inner')}>\n//         <BpkText tagName=\"h1\" textStyle=\"xxl\" className={getClassName('App__heading')}>Flight Schedule</BpkText>\n//       </div>\n//     </header>\n\n//     <main className={getClassName('App__main')}>\n//       <BpkText tagName=\"p\" className={getClassName('App__text')}>\n//         To get started, edit <BpkCode>src/App.jsx</BpkCode> and save to reload.\n//       </BpkText>\n//       <BpkText tagName=\"p\" className={getClassName('App__text')}>\n//         CALENDAR\n//       </BpkText>\n//       <BpkButton onClick={() => alert('It works!')}>Click me</BpkButton>\n//     </main>\n\n//   </div>\n// );\n\n// export default App;\n\nimport { Component } from 'react';\nimport BpkCalendar from '@skyscanner/backpack-web/bpk-component-calendar';\nimport BpkInput, {\n  INPUT_TYPES,\n} from '@skyscanner/backpack-web/bpk-component-input';\nimport format from 'date-fns/format';\n\nconst formatDateFull = (date) => format(date, 'EEEE, do MMMM yyyy');\nconst formatMonth = (date) => format(date, 'MMMM yyyy');\nconst daysOfWeek = [\n  {\n    name: 'Sunday',\n    nameAbbr: 'Sun',\n    index: 0,\n    isWeekend: true,\n  },\n  // ...\n];\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectionConfiguration: {\n        type: CALENDAR_SELECTION_TYPE.single,\n        date: null,\n      },\n    };\n  }\n\n  handleDateSelect = (date) => {\n    this.setState({\n      selectionConfiguration: {\n        type: this.props.selectionConfiguration.type,\n        date: date,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <BpkInput\n          id=\"dateInput\"\n          type={INPUT_TYPES.text}\n          name=\"date\"\n          value={(this.state.selectionConfiguration.date || '').toString()}\n          placeholder=\"Departure date\"\n        />\n        <BpkCalendar\n          id=\"calendar\"\n          onDateSelect={this.handleDateSelect}\n          formatMonth={formatMonth}\n          formatDateFull={formatDateFull}\n          daysOfWeek={daysOfWeek}\n          weekStartsOn={1}\n          changeMonthLabel=\"Change month\"\n          nextMonthLabel=\"Next month\"\n          previousMonthLabel=\"Previous month\"\n          selectionConfiguration={this.state.selectionConfiguration}\n        />\n      </div>\n    );\n  }\n}\n\n\n\n\n/* steps \nDONE - Step One: Update the header text to read “Flight Schedule”\n\nDONE - Step Two: Install the Calendar component by running the command `npm install bpk-component-calendar --save-dev`. This is also described in the Calendar documentation.\n\nStep Three: Review the Calendar documentation for usage, and add this feature into your `App.js` file. You can also edit the `App.scss` to adjust the calendar’s appearance.\n\nStep Four: Place the “Click Me” button below the calendar, and update the button’s text to say “Continue.” You can leave the button’s functionality as is.\n\nStep Five: As described above, review your application’s appearance by entering `npm start` in the terminal and then navigating to localhost:3000. */\n\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW,MAAM,iDAAiD;AACzE,OAAOC,QAAQ,IACbC,WAAW,QACN,8CAA8C;AACrD,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,cAAc,GAAIC,IAAI,IAAKJ,MAAM,CAACI,IAAI,EAAE,oBAAoB,CAAC;AACnE,MAAMC,WAAW,GAAID,IAAI,IAAKJ,MAAM,CAACI,IAAI,EAAE,WAAW,CAAC;AACvD,MAAME,UAAU,GAAG,CACjB;EACEC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE;AACb;AACA;AAAA,CACD;;AAED,eAAe,MAAMC,GAAG,SAASf,SAAS,CAAC;EACzCgB,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAUVC,gBAAgB,GAAIT,IAAI,IAAK;MAC3B,IAAI,CAACU,QAAQ,CAAC;QACZC,sBAAsB,EAAE;UACtBC,IAAI,EAAE,IAAI,CAACC,KAAK,CAACF,sBAAsB,CAACC,IAAI;UAC5CZ,IAAI,EAAEA;QACR;MACF,CAAC,CAAC;IACJ,CAAC;IAfC,IAAI,CAACc,KAAK,GAAG;MACXH,sBAAsB,EAAE;QACtBC,IAAI,EAAEG,uBAAuB,CAACC,MAAM;QACpChB,IAAI,EAAE;MACR;IACF,CAAC;EACH;EAWAiB,MAAMA,CAAA,EAAG;IACP,oBACEnB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA,CAACJ,QAAQ;QACPyB,EAAE,EAAC,WAAW;QACdP,IAAI,EAAEjB,WAAW,CAACyB,IAAK;QACvBjB,IAAI,EAAC,MAAM;QACXkB,KAAK,EAAE,CAAC,IAAI,CAACP,KAAK,CAACH,sBAAsB,CAACX,IAAI,IAAI,EAAE,EAAEsB,QAAQ,CAAC,CAAE;QACjEC,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACF7B,OAAA,CAACL,WAAW;QACV0B,EAAE,EAAC,UAAU;QACbS,YAAY,EAAE,IAAI,CAACnB,gBAAiB;QACpCR,WAAW,EAAEA,WAAY;QACzBF,cAAc,EAAEA,cAAe;QAC/BG,UAAU,EAAEA,UAAW;QACvB2B,YAAY,EAAE,CAAE;QAChBC,gBAAgB,EAAC,cAAc;QAC/BC,cAAc,EAAC,YAAY;QAC3BC,kBAAkB,EAAC,gBAAgB;QACnCrB,sBAAsB,EAAE,IAAI,CAACG,KAAK,CAACH;MAAuB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}